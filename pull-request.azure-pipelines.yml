# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Pipeline
#     Stage A
#         Job 1
#             Step 1.1

name: 'Pull Request CI'

pr:
  branches:
    include:
    - '*'
    exclude:
    - 'master'
  paths:
    exclude:
    - docs/*
    - README.md
    - LICENSE

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: 'Build and test with coverage'
    jobs:
    - job: 'Test'
      pool:
        vmImage: 'ubuntu-16.04'
      strategy:
        matrix:
          Python37:
            python.version: '3.7'
      steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'
        inputs:
          versionSpec: '$(python.version)'
      - script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements/test-requirements.txt
        displayName: "Install requirements"
      - script: |
          python -m pip install flake8
          flake8 app
        displayName: "Run linter"
      - script: |
          pip install -r requirements/test-requirements.txt
          pytest test --junitxml=junit/test-results.xml --cov=app --cov-report=xml --cov-report=html
        displayName: "Tests with pytest"
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: 'junit/test-results.xml'
          testRunTitle: 'Publish test results for Python $(python.version)'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
        
